name: Symfony Tests

on:
  push:
    branches: [ "master" ] 
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4
      
      # Setup PHP environment
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2' 
          extensions: mbstring, intl, pdo_mysql

      # Copy the .env file if not already present
      - name: Copy .env.test
        run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"

      # Cache Composer packages
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      # Install dependencies
      - name: Install Dependencies
        run: composer install --no-progress --prefer-dist
      
      # Wait for MySQL to be ready
      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h"127.0.0.1" --silent; do
            echo "Waiting for database connection..."
            sleep 1
          done

      - name: Drop Existing Database Schema (force drop all tables)
        run: php bin/console doctrine:schema:drop --force
        env:
          DATABASE_URL: "mysql://root:root@127.0.0.1:3306/test"
          
      - name: Drop Database if Exists
        run: php bin/console doctrine:database:drop --force --if-exists
        env:
          DATABASE_URL: "mysql://root:root@127.0.0.1:3306/test"
      
      - name: Create Database
        run: php bin/console doctrine:database:create
        env:
          DATABASE_URL: "mysql://root:root@127.0.0.1:3306/test"
          
      #- name: Make Migration
      #  run: php bin/console make:migration
      #  env:
      #    DATABASE_URL: "mysql://root:root@127.0.0.1:3306/test"
      
      - name: Run Database Migrations
        run: php bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration
        env:
          DATABASE_URL: "mysql://root:root@127.0.0.1:3306/test"

      # Run PHPUnit tests
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DATABASE_URL: "mysql://root:root@127.0.0.1:3306/test"
        run: vendor/bin/phpunit
